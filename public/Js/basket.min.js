//déclaration variables
const formulaireElt = document.getElementById("section-formulaire");
const totalPriceElt = document.getElementById("total-price");
const productName = document.getElementById("articleName");
const priceElt = document.getElementById("articlePrice");
const quantityElt = document.getElementById("articleQty");
const basketELt = document.getElementById("container-recapitulatif");
console.log("basketElt:" + basketELt);
let basket = JSON.parse(localStorage.getItem("products"));

//--------affichage produit selectionner
//selection de la class ou je vais injecter le code html

const positionElt = document.getElementById("articles");
console.log(positionElt);

const validation = document.getElementById("validate");

//Récupération données stockées dans le LS
fetch(`http://localhost:3000/api/furniture`)
  .then(function (response) {
    return response.json();
  })
  .catch((e) => {
    document.getElementById("container").innerHTML =
      "oups! Lancez le serveur local au Port 3000 !";
  })
  .then(function (item) {
    //Déclaration de la variable "basket"dans laquelle on met les key et les values.
    let basket = [];

    console.log(basket);
    // si le panier est vide
    if (basket === null) {
      const panierVide = `<main id="container-products-basket"><div class="empty-basket">Le panier est vide !</div></main>`;
      positionElt.innerHTML = panierVide;
    } else {
      //si le panier n'est pas vide: afficher les produits dans le LS
      let structureProductBasket = [];
      console.log("structureProductBasket:" + structureProductBasket);

      //faire boucle for pour parcourir mon LS et recupérer les objets

      for (
        let productBasket = 0;
        productBasket < basket.length;
        productBasket++
      ) {
        structureProductBasket += `
      <div id="articles">
      <div> quantité ${basket[productBasket].name}</div>
      <div> quantité ${basket[productBasket].id}</div>
       <div> quantité ${basket[productBasket].quantity}</div>
      <div> quantité ${basket[productBasket].price}</div>
      
      
      </div>


`;
      }
    }
  });
